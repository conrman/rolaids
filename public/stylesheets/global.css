@charset "UTF-8";
div, section, main, header, footer, h1, h2, h3, h4, h5, h6, p, a, svg, img {
  outline: 1px solid red; }

body {
  font-size: 1em;
  line-height: 1.2; }

/* ==========================================================================
 * Normalize.scss settings
 * ========================================================================== */
/**
 * Includes legacy browser support IE6/7
 *
 * Set to false if you want to drop support for IE6 and IE7 */
/* Base
 * ========================================================================== */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *  user zoom.
 * 3. Corrects text resizing oddly in IE 6/7 when body `font-size` is set using
 *  `em` units. */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin. */
body {
  margin: 0; }

/* HTML5 display definitions
 * ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox.
 * Correct `block` display not defined for `main` in IE 11. */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera. */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevents modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices. */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22. */
[hidden],
template {
  display: none; }

/* Links
 * ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10. */
a {
  background: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers. */
a:active, a:hover {
  outline: 0; }

/* Text-level semantics
 * ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome. */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome. */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome. */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome. */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Addresses styling not present in IE 8/9. */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers. */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers. */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
 * ========================================================================== */
/**
 * 1. Remove border when inside `a` element in IE 8/9/10.
 * 2. Improves image quality when scaled in IE 7. */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11. */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
 * ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari. */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers. */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers. */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 * Correct font family set oddly in IE 6, Safari 4/5, and Chrome. */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
 * ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set. */
/**
 * 1. Correct color not being inherited.
 *  Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 * 4. Improves appearance and consistency in all browsers. */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11. */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox. */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *  and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *  `input` and others.
 * 4. Removes inner spacing in IE 7 without affecting normal text inputs.
 *  Known issue: inner spacing remains in IE 6. */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements. */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+. */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet. */
input {
  line-height: normal; }

/**
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 *  Known issue: excess padding remains in IE 6. */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`. */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *  (include `-moz` to future-proof). */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance). */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding. */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 * 3. Corrects text not wrapping in Firefox 3.
 * 4. Corrects alignment displayed oddly in IE 6/7. */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11. */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X. */
optgroup {
  font-weight: bold; }

/* Tables
 * ========================================================================== */
/**
 * Remove most spacing between table cells. */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

html {
  box-sizing: border-box; }

*, *::after, *::before {
  box-sizing: inherit; }

body:before {
  background-image: linear-gradient(to left, transparent 0, #eee 0, #eee 6.17215%, transparent 6.17215%, transparent 8.5298%, #eee 8.5298%, #eee 14.70196%, transparent 14.70196%, transparent 17.05961%, #eee 17.05961%, #eee 23.23176%, transparent 23.23176%, transparent 25.58941%, #eee 25.58941%, #eee 31.76157%, transparent 31.76157%, transparent 34.11922%, #eee 34.11922%, #eee 40.29137%, transparent 40.29137%, transparent 42.64902%, #eee 42.64902%, #eee 48.82117%, transparent 48.82117%, transparent 51.17883%, #eee 51.17883%, #eee 57.35098%, transparent 57.35098%, transparent 59.70863%, #eee 59.70863%, #eee 65.88078%, transparent 65.88078%, transparent 68.23843%, #eee 68.23843%, #eee 74.41059%, transparent 74.41059%, transparent 76.76824%, #eee 76.76824%, #eee 82.94039%, transparent 82.94039%, transparent 85.29804%, #eee 85.29804%, #eee 91.4702%, transparent 91.4702%, transparent 93.82785%, #eee 93.82785%, #eee 100%, transparent 100%);
  content: "";
  display: inline-block;
  height: 100%;
  left: 0;
  margin: 0 auto;
  max-width: 68em;
  opacity: 0.4;
  pointer-events: none;
  position: fixed;
  right: 0;
  width: 100%;
  z-index: -1; }

@font-face {
  font-family: icons;
  src: url("../fonts/icons.eot");
  src: url("../fonts/icons.eot?#iefix") format("embedded-opentype"), url("../fonts/icons.woff") format("woff"), url("../fonts/icons.ttf") format("truetype"), url("../fonts/icons.svg#icons") format("svg");
  font-weight: normal;
  font-style: normal; }

.icon:before {
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  content: "";
  font-family: 'icons';
  font-style: normal;
  font-variant: normal;
  font-weight: normal;
  line-height: 1;
  speak: none;
  text-transform: none; }

.svg {
  text-decoration: none; }
  .svg svg {
    width: 1rem; }

.icon.-facebook:before {
  content: ""; }

.svg.-facebook {
  fill: #3b5998; }

.icon.-instagram:before {
  content: ""; }

.svg.-instagram {
  fill: tan; }

.icon.-twitter:before {
  content: ""; }

.svg.-twitter {
  fill: #4099ff; }

.sprite.-facebook {
  fill: #3b5998; }

.sprite svg {
  min-width: 16px; }

img {
  display: block;
  max-width: 100%; }
  @media screen and (max-width: 800px) {
    img {
      margin: auto; } }

.sanofi-logo {
  float: right; }
  .sanofi-logo__link {
    text-decoration: none; }
  .sanofi-logo__image, .sanofi-logo__text {
    display: inline-block;
    vertical-align: middle; }
  .sanofi-logo__text {
    color: #555; }

.container {
  max-width: 68em;
  margin-left: auto;
  margin-right: auto; }
  .container::after {
    clear: both;
    content: "";
    display: table; }

.row {
  clear: both;
  width: 100%; }

@media screen and (min-width: 480px) {
  .nav__list-item[aria-hidden="true"] {
    display: none; } }

.nav--primary .nav__list-link {
  text-transform: uppercase; }
  .nav--primary .nav__list-link:hover, .nav--primary .nav__list-link .active {
    border-bottom: 1px solid #0274b6; }

@media screen and (max-width: 480px) {
  .nav--secondary {
    display: none;
    visibility: hidden; } }

.nav__list {
  list-style: none;
  margin: 0;
  padding: 0; }
  .nav__list-link {
    border-bottom: 1px solid transparent;
    display: block;
    padding: 0.5rem;
    text-decoration: none; }
  @media screen and (max-width: 800px) {
    .nav__list {
      font-size: 75%; } }
  @media screen and (min-width: 480px) {
    .nav__list {
      display: -webkit-flex;
      display: -ms-flexbox;
      display: flex; }
      .nav__list-link {
        padding: 1rem; }
        .nav__list-link.has-dropdown:hover {
          background: #fff; }
          .nav__list-link.has-dropdown:hover + .nav-dropdown {
            display: block; } }

.nav-dropdown {
  background: #fff;
  padding: 1rem;
  display: none;
  width: 100%;
  position: absolute;
  left: 0;
  right: 0; }
  .nav-dropdown:hover {
    display: block; }
  .nav-dropdown__list {
    list-style: none;
    display: table;
    margin: auto;
    padding: 0; }

.header {
  background: rgba(255, 255, 255, 0.5);
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 1; }
  .header .container {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
        -ms-flex-direction: column;
            flex-direction: column; }
  .header__bar {
    padding: 0 1rem; }
    .header__bar--bottom {
      -webkit-order: 1;
          -ms-flex-order: 1;
              order: 1; }
      .header__bar--bottom > .row {
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
        -webkit-align-items: center;
            -ms-flex-align: center;
                align-items: center; }
        .header__bar--bottom > .row:first-child {
          -webkit-justify-content: flex-end;
              -ms-flex-pack: end;
                  justify-content: flex-end;
          padding: 0 1rem; }
    .header__bar--top {
      -webkit-order: 0;
          -ms-flex-order: 0;
              order: 0; }
  .header .block--right {
    display: -webkit-box;
    display: -moz-box;
    display: box;
    display: -webkit-flex;
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex;
    box-orient: horizontal;
    box-direction: normal;
    -webkit-flex-direction: row;
    -moz-flex-direction: row;
    flex-direction: row;
    -ms-flex-direction: row;
    box-align: center;
    -webkit-align-items: center;
    -moz-align-items: center;
    -ms-align-items: center;
    -o-align-items: center;
    align-items: center;
    -ms-flex-align: center;
    box-pack: end;
    -webkit-justify-content: flex-end;
    -moz-justify-content: flex-end;
    -ms-justify-content: flex-end;
    -o-justify-content: flex-end;
    justify-content: flex-end;
    -ms-flex-pack: end;
    height: auto;
    width: 100%; }
  .header .nav-toggle {
    -webkit-order: 1;
        -ms-flex-order: 1;
            order: 1;
    display: none; }
    @media screen and (max-width: 480px) {
      .header .nav-toggle {
        display: block; } }
  .header .social-media {
    -webkit-order: 0;
        -ms-flex-order: 0;
            order: 0; }
    .header .social-media svg {
      width: 16px; }
  @media screen and (min-width: 800px) {
    .header .social-media, .header .app-nav--secondary {
      display: inline-block;
      vertical-align: middle; } }

.footer {
  background: #fff;
  padding: 1rem; }
  @media screen and (min-width: 800px) {
    .footer > .container {
      display: -webkit-box;
      display: -moz-box;
      display: box;
      display: -webkit-flex;
      display: -moz-flex;
      display: -ms-flexbox;
      display: flex;
      box-orient: horizontal;
      box-direction: normal;
      -webkit-flex-direction: row;
      -moz-flex-direction: row;
      flex-direction: row;
      -ms-flex-direction: row;
      box-align: center;
      -webkit-align-items: center;
      -moz-align-items: center;
      -ms-align-items: center;
      -o-align-items: center;
      align-items: center;
      -ms-flex-align: center;
      -webkit-align-content: center;
              align-content: center;
      -ms-flex-line-pack: center; } }
  .footer .social-media {
    text-transform: uppercase; }
    @media screen and (max-width: 800px) {
      .footer .social-media {
        border-bottom: 2px solid lightblue;
        padding: 1rem 2rem;
        margin-bottom: 2rem; }
        .footer .social-media__link {
          text-align: center; } }
    @media screen and (min-width: 800px) {
      .footer .social-media {
        padding: 2rem;
        border-right: 2px solid lightblue;
        float: left;
        display: block;
        margin-right: 2.35765%;
        width: 23.23176%; }
        .footer .social-media:last-child {
          margin-right: 0; } }
    .footer .social-media__link {
      text-decoration: none; }
      @media screen and (min-width: 800px) {
        .footer .social-media__link {
          display: -webkit-box;
          display: -moz-box;
          display: box;
          display: -webkit-flex;
          display: -moz-flex;
          display: -ms-flexbox;
          display: flex;
          box-align: center;
          -webkit-align-items: center;
          -moz-align-items: center;
          -ms-align-items: center;
          -o-align-items: center;
          align-items: center;
          -ms-flex-align: center; } }
      @media screen and (max-width: 800px) {
        .footer .social-media__link-icon, .footer .social-media__link-text {
          display: inline-block;
          vertical-align: middle; } }
    .footer .social-media svg {
      min-width: 36px; }
  @media screen and (min-width: 800px) {
    .footer__navigation {
      float: left;
      display: block;
      margin-right: 2.35765%;
      width: 48.82117%; }
      .footer__navigation:last-child {
        margin-right: 0; } }
  @media screen and (min-width: 480px) {
    .footer__navigation {
      display: -webkit-box;
      display: -moz-box;
      display: box;
      display: -webkit-flex;
      display: -moz-flex;
      display: -ms-flexbox;
      display: flex;
      box-align: center;
      -webkit-align-items: center;
      -moz-align-items: center;
      -ms-align-items: center;
      -o-align-items: center;
      align-items: center;
      -ms-flex-align: center;
      box-pack: center;
      -webkit-justify-content: center;
      -moz-justify-content: center;
      -ms-justify-content: center;
      -o-justify-content: center;
      justify-content: center;
      -ms-flex-pack: center; } }
  .footer__navigation ul {
    list-style: none;
    font-size: 80%; }
    @media screen and (min-width: 800px) {
      .footer__navigation ul {
        font-size: 90%; } }
    .footer__navigation ul li {
      padding: 0.3em 0.1em; }
  .footer__navigation a {
    text-decoration: none; }
  .footer .brand {
    font-size: 80%; }
    @media screen and (min-width: 800px) {
      .footer .brand {
        float: left;
        display: block;
        margin-right: 2.35765%;
        width: 23.23176%; }
        .footer .brand:last-child {
          margin-right: 0; } }

.carousel {
  color: #fff;
  position: relative; }
  .carousel-inner {
    overflow: hidden; }
  .carousel-item {
    position: relative; }
    .carousel-item__image {
      height: 100%;
      width: 100%;
      object-fit: cover;
      object-position: center; }
      @media screen and (max-width: 480px) {
        .carousel-item__image {
          height: 100vh; } }
      @media screen and (min-width: 1200px) {
        .carousel-item__image {
          height: 50vmax; } }
    .carousel-item__caption {
      display: table;
      margin: auto;
      padding: 1rem;
      position: absolute;
      bottom: 10%; }
      @media screen and (min-width: 800px) {
        .carousel-item__caption {
          width: 50%;
          max-width: 600px;
          left: 10%; } }

.carousel-item__caption-title, .carousel-item__caption-text {
  font-size: 1.333em; }

.carousel-item__caption-title {
  font-size: 2.36859em;
  text-transform: uppercase; }

.carousel-item__caption-text {
  margin-bottom: 2em; }

.section {
  max-width: 1440px;
  margin-left: auto;
  margin-right: auto; }
  .section::after {
    clear: both;
    content: "";
    display: table; }
  .section-content {
    display: block; }
    .section-content::after {
      clear: both;
      content: "";
      display: table; }
    @media screen and (min-width: 800px) {
      .section-content__column {
        float: left;
        display: block;
        margin-right: 2.35765%;
        width: 48.82117%; }
        .section-content__column:last-child {
          margin-right: 0; } }

.section-triangle .section-content__column:last-child {
  position: relative; }
  .section-triangle .section-content__column:last-child:after {
    content: '';
    border-right: 400px solid rgba(2, 116, 182, 0.6);
    border-left: 400px solid transparent;
    border-top: 400px solid transparent;
    position: absolute;
    right: 0;
    bottom: 0; }

.section-display .section-content {
  background-color: #D8BFD8; }

.section-display .section-image {
  position: relative;
  z-index: 1; }

.section-display .section-header {
  background-color: purple;
  color: #fff;
  padding: 1em 0;
  margin-bottom: 2em;
  width: 100%;
  position: relative;
  z-index: 0; }
  .section-display .section-header:before {
    content: '';
    background: purple;
    width: 105%;
    height: 100%;
    position: absolute;
    top: 0;
    left: -105%;
    z-index: -1; }

.hero {
  background-size: cover;
  background-position: center;
  height: 500px; }
  .hero > .container {
    height: 100%;
    position: relative; }
  .hero-caption {
    color: #fff;
    position: absolute;
    bottom: 10%;
    left: 0;
    padding: 1em; }
    @media screen and (min-width: 800px) {
      .hero-caption {
        max-width: 50%; } }
    .hero-caption__title {
      font-size: 2.36859em;
      text-transform: uppercase; }
    .hero-caption__text {
      margin-bottom: 3rem; }

@media screen and (min-width: 800px) {
  .callout {
    display: -webkit-box;
    display: -moz-box;
    display: box;
    display: -webkit-flex;
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex; }
    .callout-block {
      background-size: cover;
      background-position: center;
      box-flex: 1;
      -webkit-flex: 1;
      -moz-flex: 1;
      -ms-flex: 1;
      flex: 1; } }

.button {
  background: #fff;
  color: #0274b6;
  letter-spacing: 0.03em;
  text-decoration: none;
  text-transform: uppercase;
  padding: 0.5rem 1.5rem; }
  .button:hover {
    background: #f7f7f7; }
  .button:active {
    background: #e6e6e6; }
  .button--large {
    font-size: 115%;
    padding: 1rem 3rem; }
  .button--primary {
    background: #0274b6;
    color: #fff; }
    .button--primary:hover {
      background: #0284cf; }
    .button--primary:active {
      background: #015484; }
  .button--secondary:hover, .accordion-tabs .tab-link.is-active {
    background: #ab0041;
    color: #fff; }

.accordion__submenu {
  display: none; }

.accordion.is-expanded {
  display: block; }

.accordion-tabs {
  padding: 0; }
  .accordion-tabs::after {
    clear: both;
    content: "";
    display: table; }
  .accordion-tabs .tab {
    list-style: none; }
    @media screen and (min-width: 1200px) {
      .accordion-tabs .tab {
        display: inline; } }
  .accordion-tabs .tab-link {
    display: block;
    padding-right: 1em; }
    @media screen and (min-width: 1200px) {
      .accordion-tabs .tab-link {
        display: inline-block; } }
  .accordion-tabs .tab-content {
    display: none;
    width: 100%; }
    @media screen and (min-width: 1200px) {
      .accordion-tabs .tab-content {
        float: left; } }

.page-nav {
  background: #fff;
  margin: 0;
  counter-reset: nav-counter;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  width: 100%;
  text-transform: uppercase; }
  .page-nav dt {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-align-items: center;
        -ms-flex-align: center;
            align-items: center;
    max-width: 250px;
    padding: 1em; }
    .page-nav dt:before {
      content: counter(nav-counter);
      counter-increment: nav-counter;
      font-size: 22px;
      padding: 1em; }
    .page-nav dt:hover {
      background: #fafafa; }
  .page-nav a {
    text-decoration: none; }

main.content {
  background: #fff;
  padding: 2rem 1rem; }

body.home .content {
  padding: 0; }

body.home .coupon-bar {
  background: #fafafa;
  padding: 1rem;
  text-align: center; }

body.home .callout-block {
  background-size: cover;
  background-position: center;
  padding: 1rem;
  min-height: 360px;
  height: 35vmax; }

body.home .callout-block--first {
  text-align: center; }
  @media screen and (max-width: 800px) {
    body.home .callout-block--first {
      border-bottom: 6px solid #fff; } }
  @media screen and (min-width: 800px) {
    body.home .callout-block--first {
      border-right: 6px solid #fff; } }
  body.home .callout-block--first .callout-block__title {
    color: #ab0041;
    font-size: 5.61023em;
    text-shadow: 0 1px 5px rgba(85, 85, 85, 0.6); }

body.contact .hero {
  background-position: center;
  background-size: cover; }

body.contact .content {
  background: #fff; }
  body.contact .content > .container {
    display: -webkit-box;
    display: -moz-box;
    display: box;
    display: -webkit-flex;
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex;
    box-orient: vertical;
    box-direction: reverse;
    -webkit-flex-direction: column-reverse;
    -moz-flex-direction: column-reverse;
    flex-direction: column-reverse;
    -ms-flex-direction: column-reverse; }
    @media screen and (min-width: 800px) {
      body.contact .content > .container {
        box-orient: horizontal;
        box-direction: reverse;
        -webkit-flex-direction: row-reverse;
        -moz-flex-direction: row-reverse;
        flex-direction: row-reverse;
        -ms-flex-direction: row-reverse; } }

body.coupon main.content {
  background-color: #D8BFD8; }
  body.coupon main.content > .container {
    -webkit-columns: 2 500px;
       -moz-columns: 2 500px;
            columns: 2 500px; }
  body.coupon main.content img {
    display: block;
    margin: auto; }

body.product .hero-product__image {
  position: absolute;
  right: 0;
  bottom: -5%; }
  body.product .hero-product__image--small {
    right: 20%;
    bottom: -5%; }

body.where-to-buy .retailers {
  padding: 2rem;
  display: block; }
  body.where-to-buy .retailers::after {
    clear: both;
    content: "";
    display: table; }
  body.where-to-buy .retailers-block {
    outline: 1px solid #555;
    float: left; }
    @media screen and (min-width: 480px) {
      body.where-to-buy .retailers-block {
        height: 200px;
        width: 33.33333%; } }
    @media screen and (min-width: 800px) {
      body.where-to-buy .retailers-block {
        height: 200px;
        width: 20%; } }

/*# sourceMappingURL=data:application/json;base64, */
